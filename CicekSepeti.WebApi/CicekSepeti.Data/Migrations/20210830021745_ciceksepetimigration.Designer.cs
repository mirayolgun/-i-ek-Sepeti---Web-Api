// <auto-generated />
using CicekSepeti.Data.Concrete.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CicekSepeti.Data.Migrations
{
    [DbContext(typeof(CicekSepetidbContext))]
    [Migration("20210830021745_ciceksepetimigration")]
    partial class ciceksepetimigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CicekSepeti.Core.Models.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("BasketItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 3,
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("CicekSepeti.Core.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Desciption = "Pembe incili Kutuda Renkli Lisyantuslar",
                            Name = "Tasarım Çiçek",
                            Price = 90m,
                            UnitsInStock = 1
                        },
                        new
                        {
                            Id = 2,
                            Desciption = "Mutluluk Kutusu",
                            Name = "Doğum Günü Çiçekleri",
                            Price = 79m,
                            UnitsInStock = 8
                        },
                        new
                        {
                            Id = 3,
                            Desciption = "Pembe Papatyalar Çiçek Buketi",
                            Name = "Çiçek Buketleri",
                            Price = 94m,
                            UnitsInStock = 5
                        },
                        new
                        {
                            Id = 4,
                            Desciption = "Kar Beyaz Gül ve Lilyum",
                            Name = "Lilyum & Zambak",
                            Price = 108m,
                            UnitsInStock = 4
                        },
                        new
                        {
                            Id = 5,
                            Desciption = "100 Kırmızı Gül Çiçek Demeti",
                            Name = "Güller",
                            Price = 200m,
                            UnitsInStock = 6
                        });
                });

            modelBuilder.Entity("CicekSepeti.Core.Models.BasketItem", b =>
                {
                    b.HasOne("CicekSepeti.Core.Models.Product", "Product")
                        .WithOne("basketItem")
                        .HasForeignKey("CicekSepeti.Core.Models.BasketItem", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
